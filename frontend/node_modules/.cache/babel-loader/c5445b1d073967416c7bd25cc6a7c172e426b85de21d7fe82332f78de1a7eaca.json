{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\n//use effect is a hook that runs a function on every render of the component, e.g. to fetch data\n//useState is a hook which rerenders the component on every state change\n\nconst useFetch = url => {\n  _s();\n  //custom hooks need be a function and named use....\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    //use effect is a hook that runs a function on every render of the component, e.g. to fetch data\n    //useState is a hook which rerenders the component on every state change\n\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      fetch(url, {\n        signal: abortCont.signal\n      }).then(res => {\n        console.log(res);\n        if (!res.ok) {\n          throw Error(\"could not fetch the data\");\n        }\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setIsPending(false);\n        setError(null);\n      }).catch(err => {\n        setIsPending(false);\n        setError(err.message);\n      });\n\n      //fetch simulation\n      setData([{\n        title: \"My new website\",\n        body: \"lorem ipsum...\",\n        author: \"Tobi\",\n        id: 1\n      }, {\n        title: \"My second site\",\n        body: \"lorem ipsum...\",\n        author: \"Dora\",\n        id: 2\n      }, {\n        title: \"My third website\",\n        body: \"lorem ipsum...\",\n        author: \"Ida\",\n        id: 3\n      }]);\n      setIsPending(false);\n    }, 1000);\n    console.log(\"use effect ran\");\n    return () => console.log(\"cleanup\");\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","_s","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","setTimeout","fetch","signal","then","res","console","log","ok","Error","json","catch","err","message","title","body","author","id"],"sources":["/home/tobiya/Coding/react-blog/src/useFetch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n//use effect is a hook that runs a function on every render of the component, e.g. to fetch data\n//useState is a hook which rerenders the component on every state change\n\nconst useFetch = (url) => {\n  //custom hooks need be a function and named use....\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    //use effect is a hook that runs a function on every render of the component, e.g. to fetch data\n    //useState is a hook which rerenders the component on every state change\n\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      fetch(url, {signal:  abortCont.signal})\n        .then((res) => {\n          console.log(res);\n          if (!res.ok) {\n            throw Error(\"could not fetch the data\");\n          }\n          return res.json();\n        })\n        .then((data) => {\n          setData(data);\n          setIsPending(false);\n          setError(null);\n        })\n        .catch((err) => {\n          setIsPending(false);\n          setError(err.message);\n        });\n\n      //fetch simulation\n      setData([\n        {\n          title: \"My new website\",\n          body: \"lorem ipsum...\",\n          author: \"Tobi\",\n          id: 1,\n        },\n        {\n          title: \"My second site\",\n          body: \"lorem ipsum...\",\n          author: \"Dora\",\n          id: 2,\n        },\n        {\n          title: \"My third website\",\n          body: \"lorem ipsum...\",\n          author: \"Ida\",\n          id: 3,\n        },\n      ]);\n      setIsPending(false);\n    }, 1000);\n\n    console.log(\"use effect ran\");\n    return () => console.log(\"cleanup\");\n  }, [url]);\n\n  return { data, isPending, error };\n};\n\nexport default useFetch;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C;AACA;;AAEA,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EACxB;;EAEA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACA;;IAEA,MAAMU,SAAS,GAAG,IAAIC,eAAe,CAAC,CAAC;IACvCC,UAAU,CAAC,MAAM;MACfC,KAAK,CAACX,GAAG,EAAE;QAACY,MAAM,EAAGJ,SAAS,CAACI;MAAM,CAAC,CAAC,CACpCC,IAAI,CAAEC,GAAG,IAAK;QACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB,IAAI,CAACA,GAAG,CAACG,EAAE,EAAE;UACX,MAAMC,KAAK,CAAC,0BAA0B,CAAC;QACzC;QACA,OAAOJ,GAAG,CAACK,IAAI,CAAC,CAAC;MACnB,CAAC,CAAC,CACDN,IAAI,CAAEX,IAAI,IAAK;QACdC,OAAO,CAACD,IAAI,CAAC;QACbG,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,CACDa,KAAK,CAAEC,GAAG,IAAK;QACdhB,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAACc,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,CAAC;;MAEJ;MACAnB,OAAO,CAAC,CACN;QACEoB,KAAK,EAAE,gBAAgB;QACvBC,IAAI,EAAE,gBAAgB;QACtBC,MAAM,EAAE,MAAM;QACdC,EAAE,EAAE;MACN,CAAC,EACD;QACEH,KAAK,EAAE,gBAAgB;QACvBC,IAAI,EAAE,gBAAgB;QACtBC,MAAM,EAAE,MAAM;QACdC,EAAE,EAAE;MACN,CAAC,EACD;QACEH,KAAK,EAAE,kBAAkB;QACzBC,IAAI,EAAE,gBAAgB;QACtBC,MAAM,EAAE,KAAK;QACbC,EAAE,EAAE;MACN,CAAC,CACF,CAAC;MACFrB,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC;IAERU,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7B,OAAO,MAAMD,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EACrC,CAAC,EAAE,CAAChB,GAAG,CAAC,CAAC;EAET,OAAO;IAAEE,IAAI;IAAEE,SAAS;IAAEE;EAAM,CAAC;AACnC,CAAC;AAACL,EAAA,CA5DIF,QAAQ;AA8Dd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}