{"ast":null,"code":"var _jsxFileName = \"/home/tobiya/Coding/react-blog/src/Home.js\",\n  _s = $RefreshSig$();\nimport BlogList from \"./BlogList\";\nimport React, { useState, useEffect } from \"react\";\nimport mongoose from \"mongoose\";\n//use effect is a hook that runs a function on every render of the component, e.g. to fetch data\n//useState is a hook which rerenders the component on every state change\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [blogs, setBlogs] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  const uri = \"mongodb+srv://tobias:eQjvxyS5Sh70yQt4@ReactBlog.mongodb.net/dbname?retryWrites=true&w=majority\";\n  try {\n    mongoose.connect(uri, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true\n    });\n  } catch (error) {\n    console.error(\"Mongoose connection error123:\", error);\n  }\n  const UserSchema = new mongoose.Schema({\n    name: String,\n    age: Number\n  });\n  const UserModel = mongoose.model('User', UserSchema);\n  const fetchUsers = async () => {\n    try {\n      const users = await UserModel.find();\n      console.log(users);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  fetchUsers();\n\n  // useEffect(() => {\n  //   //use effect is a hook that runs a function on every render of the component, e.g. to fetch data\n  //   //useState is a hook which rerenders the component on every state change\n  //   setTimeout(() => {\n  //     fetch(\"http://localhost:3000/db.js\")\n  //       .then((res) => {\n  //         console.log(res);\n  //         if (!res.ok) {\n  //           throw Error(\"could not fetch the data\");\n  //         }\n  //         return res.json();\n  //       })\n  //       .then((data) => {\n  //         setBlogs(data);\n  //         setIsPending(false);\n  //         setError(null);\n  //       })\n  //       .catch((err) => {\n  //         setIsPending(false);\n  //         setError(err.message);\n  //       });\n\n  //     //fetch simulation\n  //     setBlogs([\n  //       {\n  //         title: \"My new website\",\n  //         body: \"lorem ipsum...\",\n  //         author: \"Tobi\",\n  //         id: 1,\n  //       },\n  //       {\n  //         title: \"My second site\",\n  //         body: \"lorem ipsum...\",\n  //         author: \"Dora\",\n  //         id: 2,\n  //       },\n  //       {\n  //         title: \"My third website\",\n  //         body: \"lorem ipsum...\",\n  //         author: \"Ida\",\n  //         id: 3,\n  //       },\n  //     ]);\n  //     setIsPending(false);\n  //   }, 1000);\n  //   console.log(\"use effect ran\");\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }, this), blogs && /*#__PURE__*/_jsxDEV(BlogList, {\n      blogs: blogs,\n      title: \"All blogs!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"xu5WK40wUo9vKWGpsqm0Ez0aazU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["BlogList","React","useState","useEffect","mongoose","jsxDEV","_jsxDEV","Home","_s","blogs","setBlogs","isPending","setIsPending","error","setError","uri","connect","useNewUrlParser","useUnifiedTopology","console","UserSchema","Schema","name","String","age","Number","UserModel","model","fetchUsers","users","find","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["/home/tobiya/Coding/react-blog/src/Home.js"],"sourcesContent":["import BlogList from \"./BlogList\";\nimport React, { useState, useEffect } from \"react\";\nimport mongoose from \"mongoose\";\n//use effect is a hook that runs a function on every render of the component, e.g. to fetch data\n//useState is a hook which rerenders the component on every state change\n\nconst Home = () => {\n  const [blogs, setBlogs] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n   const uri =\n    \"mongodb+srv://tobias:eQjvxyS5Sh70yQt4@ReactBlog.mongodb.net/dbname?retryWrites=true&w=majority\";\n  \n    try {\n      mongoose.connect(uri, { useNewUrlParser: true, useUnifiedTopology: true });\n    } catch (error) {\n      console.error(\"Mongoose connection error123:\", error);\n    }\n\n\n  const UserSchema = new mongoose.Schema({\n    name: String,\n    age: Number\n  });\n  \n  const UserModel = mongoose.model('User', UserSchema);\n  \n  const fetchUsers = async () => {\n    try {\n      const users = await UserModel.find();\n      console.log(users);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  \n  fetchUsers();\n\n  // useEffect(() => {\n  //   //use effect is a hook that runs a function on every render of the component, e.g. to fetch data\n  //   //useState is a hook which rerenders the component on every state change\n  //   setTimeout(() => {\n  //     fetch(\"http://localhost:3000/db.js\")\n  //       .then((res) => {\n  //         console.log(res);\n  //         if (!res.ok) {\n  //           throw Error(\"could not fetch the data\");\n  //         }\n  //         return res.json();\n  //       })\n  //       .then((data) => {\n  //         setBlogs(data);\n  //         setIsPending(false);\n  //         setError(null);\n  //       })\n  //       .catch((err) => {\n  //         setIsPending(false);\n  //         setError(err.message);\n  //       });\n\n  //     //fetch simulation\n  //     setBlogs([\n  //       {\n  //         title: \"My new website\",\n  //         body: \"lorem ipsum...\",\n  //         author: \"Tobi\",\n  //         id: 1,\n  //       },\n  //       {\n  //         title: \"My second site\",\n  //         body: \"lorem ipsum...\",\n  //         author: \"Dora\",\n  //         id: 2,\n  //       },\n  //       {\n  //         title: \"My third website\",\n  //         body: \"lorem ipsum...\",\n  //         author: \"Ida\",\n  //         id: 3,\n  //       },\n  //     ]);\n  //     setIsPending(false);\n  //   }, 1000);\n  //   console.log(\"use effect ran\");\n  // }, []);\n\n  return (\n    <div className=\"home\">\n      {error && <div>{error}</div>}\n      {isPending && <div>Loading...</div>}\n      {\n        /* conditional templating with && --> checks left side first, is null at the beginning and therefore does not render the right side\n       after useEffect run the side is rerendered and the blogs are set so blogs is true*/\n        //Props is used to pass down the blogs from the parent to the child component called BlogList.js\n      }\n      {blogs && <BlogList blogs={blogs} title=\"All blogs!\" />}\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,UAAU;AAC/B;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEvC,MAAMa,GAAG,GACR,gGAAgG;EAEhG,IAAI;IACFX,QAAQ,CAACY,OAAO,CAACD,GAAG,EAAE;MAAEE,eAAe,EAAE,IAAI;MAAEC,kBAAkB,EAAE;IAAK,CAAC,CAAC;EAC5E,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdM,OAAO,CAACN,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;EACvD;EAGF,MAAMO,UAAU,GAAG,IAAIhB,QAAQ,CAACiB,MAAM,CAAC;IACrCC,IAAI,EAAEC,MAAM;IACZC,GAAG,EAAEC;EACP,CAAC,CAAC;EAEF,MAAMC,SAAS,GAAGtB,QAAQ,CAACuB,KAAK,CAAC,MAAM,EAAEP,UAAU,CAAC;EAEpD,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,KAAK,GAAG,MAAMH,SAAS,CAACI,IAAI,CAAC,CAAC;MACpCX,OAAO,CAACY,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACdM,OAAO,CAACN,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAEDe,UAAU,CAAC,CAAC;;EAEZ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEtB,OAAA;IAAK0B,SAAS,EAAC,MAAM;IAAAC,QAAA,GAClBpB,KAAK,iBAAIP,OAAA;MAAA2B,QAAA,EAAMpB;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC3B1B,SAAS,iBAAIL,OAAA;MAAA2B,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAMlC5B,KAAK,iBAAIH,OAAA,CAACN,QAAQ;MAACS,KAAK,EAAEA,KAAM;MAAC6B,KAAK,EAAC;IAAY;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA7FID,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AA+FV,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}