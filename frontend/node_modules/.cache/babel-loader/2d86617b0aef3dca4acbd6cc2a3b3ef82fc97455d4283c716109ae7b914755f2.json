{"ast":null,"code":"// mongoDB.js\nimport { MongoClient } from \"mongodb\";\nconst uri = \"mongodb+srv://tobias:<EyhPt1FNxnc5ZXhQ>@reactblog.kkl8z.mongodb.net/?retryWrites=true&w=majority&appName=ReactBlog\";\nconst client = new MongoClient(uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nasync function connectDB() {\n  try {\n    await client.connect();\n    console.log(\"Connected successfully to MongoDB\");\n    return client.db();\n  } catch (error) {\n    console.error(\"Error connecting to MongoDB:\", error);\n    throw error;\n  }\n}\n\n// Export a function to get the DB instance\nexport async function getDB() {\n  const db = await connectDB();\n  return db;\n}","map":{"version":3,"names":["MongoClient","uri","client","useNewUrlParser","useUnifiedTopology","connectDB","connect","console","log","db","error","getDB"],"sources":["/home/tobiya/Coding/react-blog/src/dbConnect.js"],"sourcesContent":["// mongoDB.js\nimport { MongoClient } from \"mongodb\";\n\nconst uri =\n  \"mongodb+srv://tobias:<EyhPt1FNxnc5ZXhQ>@reactblog.kkl8z.mongodb.net/?retryWrites=true&w=majority&appName=ReactBlog\";\n\nconst client = new MongoClient(uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n});\n\nasync function connectDB() {\n  try {\n    await client.connect();\n    console.log(\"Connected successfully to MongoDB\");\n    return client.db();\n  } catch (error) {\n    console.error(\"Error connecting to MongoDB:\", error);\n    throw error;\n  }\n}\n\n// Export a function to get the DB instance\nexport async function getDB() {\n  const db = await connectDB();\n  return db;\n}\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,SAAS;AAErC,MAAMC,GAAG,GACP,oHAAoH;AAEtH,MAAMC,MAAM,GAAG,IAAIF,WAAW,CAACC,GAAG,EAAE;EAClCE,eAAe,EAAE,IAAI;EACrBC,kBAAkB,EAAE;AACtB,CAAC,CAAC;AAEF,eAAeC,SAASA,CAAA,EAAG;EACzB,IAAI;IACF,MAAMH,MAAM,CAACI,OAAO,CAAC,CAAC;IACtBC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAChD,OAAON,MAAM,CAACO,EAAE,CAAC,CAAC;EACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACb;AACF;;AAEA;AACA,OAAO,eAAeC,KAAKA,CAAA,EAAG;EAC5B,MAAMF,EAAE,GAAG,MAAMJ,SAAS,CAAC,CAAC;EAC5B,OAAOI,EAAE;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}