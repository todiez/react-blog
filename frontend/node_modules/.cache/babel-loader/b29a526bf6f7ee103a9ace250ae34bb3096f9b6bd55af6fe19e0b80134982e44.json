{"ast":null,"code":"// mongoDB.js\nconst mongoose = require('mongoose');\nconst uri = \"mongodb+srv://tobias:EyhPt1FNxnc5ZXhQ@reactblog.kkl8z.mongodb.net/?retryWrites=true&w=majority&appName=ReactBlog\";\n\n// Options for the connection\nconst options = {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n};\n\n// Connect to MongoDB\nmongoose.connect(uri, options);\n\n// Event listeners for connection status\nmongoose.connection.on('connected', () => {\n  console.log('Mongoose default connection open to ', uri);\n});\nmongoose.connection.on('error', err => {\n  console.log('Mongoose default connection error: ', err);\n});\nmongoose.connection.on('disconnected', () => {\n  console.log('Mongoose default connection disconnected');\n});\n\n// For development, you might want to reconnect if disconnected\nprocess.on('SIGINT', () => {\n  mongoose.connection.close(() => {\n    console.log('Mongoose default connection disconnected through app termination');\n    process.exit(0);\n  });\n});","map":{"version":3,"names":["mongoose","require","uri","options","useNewUrlParser","useUnifiedTopology","connect","connection","on","console","log","err","process","close","exit"],"sources":["/home/tobiya/Coding/react-blog/src/mongoDB.js"],"sourcesContent":["// mongoDB.js\nconst mongoose = require('mongoose');\n\n\nconst uri =\n  \"mongodb+srv://tobias:EyhPt1FNxnc5ZXhQ@reactblog.kkl8z.mongodb.net/?retryWrites=true&w=majority&appName=ReactBlog\";\n\n\n\n// Options for the connection\nconst options = {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n};\n\n// Connect to MongoDB\nmongoose.connect(uri, options);\n\n// Event listeners for connection status\nmongoose.connection.on('connected', () => {\n  console.log('Mongoose default connection open to ', uri);\n});\n\nmongoose.connection.on('error', (err) => {\n  console.log('Mongoose default connection error: ', err);\n});\n\nmongoose.connection.on('disconnected', () => {\n  console.log('Mongoose default connection disconnected');\n});\n\n// For development, you might want to reconnect if disconnected\nprocess.on('SIGINT', () => {\n  mongoose.connection.close(() => {\n    console.log('Mongoose default connection disconnected through app termination');\n    process.exit(0);\n  });\n});"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAGpC,MAAMC,GAAG,GACP,kHAAkH;;AAIpH;AACA,MAAMC,OAAO,GAAG;EACdC,eAAe,EAAE,IAAI;EACrBC,kBAAkB,EAAE;AACtB,CAAC;;AAED;AACAL,QAAQ,CAACM,OAAO,CAACJ,GAAG,EAAEC,OAAO,CAAC;;AAE9B;AACAH,QAAQ,CAACO,UAAU,CAACC,EAAE,CAAC,WAAW,EAAE,MAAM;EACxCC,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAER,GAAG,CAAC;AAC1D,CAAC,CAAC;AAEFF,QAAQ,CAACO,UAAU,CAACC,EAAE,CAAC,OAAO,EAAGG,GAAG,IAAK;EACvCF,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEC,GAAG,CAAC;AACzD,CAAC,CAAC;AAEFX,QAAQ,CAACO,UAAU,CAACC,EAAE,CAAC,cAAc,EAAE,MAAM;EAC3CC,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;AACzD,CAAC,CAAC;;AAEF;AACAE,OAAO,CAACJ,EAAE,CAAC,QAAQ,EAAE,MAAM;EACzBR,QAAQ,CAACO,UAAU,CAACM,KAAK,CAAC,MAAM;IAC9BJ,OAAO,CAACC,GAAG,CAAC,kEAAkE,CAAC;IAC/EE,OAAO,CAACE,IAAI,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}